@inherits LayoutComponentBase
@inject IAppSettingsService AppSettingsService
<FluentLayout>
    <FluentHeader>
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center" HorizontalGap="12" Width="100%" Style="justify-content: space-between;">
            <FluentIcon Value="@(Icon.FromImageUrl("/_content/Cardfile.Shared/logo.png"))" Width="64px" Height="64px" />
            <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Right">
                <UserDropdown />
            </FluentStack>
        </FluentStack>
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        @if (isConfigured)
        {
            <div style="display: none;">
                <NavMenu />
            </div>
        }
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
</FluentLayout>

<FluentMenuProvider @rendermode="InteractiveAuto" />

<div id="blazor-error-ui" data-nosnippet>
    <environment include="Staging,Production">
        An error has occurred. This application may no longer respond until reloaded.
    </environment>
    <environment include="Development">
        An unhandled exception has occurred. See browser dev tools for details.
    </environment>
    <a href="" class="reload">Reload</a>
    <a class="dismiss">ðŸ—™</a>
</div>

@code {
    /// <summary>
    /// Flag indicating whether the application has been configured at least once.
    /// If false, the side navigation menu (NavMenu) will be hidden in this layout.
    /// </summary>
    private bool isConfigured = false;

    /// <summary>
    /// Loads the current configuration state from the application settings service.
    /// This determines if the navigation menu should be rendered.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            isConfigured = await AppSettingsService.IsConfiguredAsync();
        }
        catch
        {
            // In case of any error reading configuration, default to hidden menu.
            isConfigured = false;
        }
    }
}

@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject IAppSettingsService AppSettingsService
@inject IAuthService AuthService

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

    /// <summary>
    /// Componente que redirige a la página apropiada cuando el usuario no está autorizado.
    /// Prioriza el estado de autenticación del circuito (AuthenticationState) y luego recurre a IAuthService.
    /// - Si está autenticado: redirige a /cards
    /// - Si la app no está configurada: redirige a /initial-config
    /// - En cualquier otro caso: redirige a /login
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // 1) Priorizar el estado de autenticación actual del circuito
            if (AuthenticationStateTask != null)
            {
                var authState = await AuthenticationStateTask;
                var principal = authState?.User;
                if (principal?.Identity?.IsAuthenticated == true)
                {
                    NavigationManager.NavigateTo("/cards", true);
                    return;
                }
            }

            // 2) Fallback: verificar autenticación vía IAuthService (persistencia propia)
            var isAuthenticated = await AuthService.IsAuthenticatedAsync();
            if (isAuthenticated)
            {
                NavigationManager.NavigateTo("/cards", true);
                return;
            }

            // 3) Verificar si la aplicación está configurada
            var isConfigured = await AppSettingsService.IsConfiguredAsync();
            if (!isConfigured)
            {
                NavigationManager.NavigateTo("/initial-config", true);
            }
            else
            {
                NavigationManager.NavigateTo("/login", true);
            }
        }
        catch (Exception)
        {
            // En caso de error, redirigir a login por seguridad
            NavigationManager.NavigateTo("/login", true);
        }
    }
}
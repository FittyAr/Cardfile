@page "/login"
@using Cardfile.Shared.Models
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager Navigation
@inject IAppSettingsService AppSettingsService

<FluentStack Orientation="Orientation.Vertical" VerticalGap="30" Style="max-width: 400px; margin: 0 auto; padding: 40px 20px;">
    <FluentStack Orientation="Orientation.Vertical" VerticalGap="10" Style="text-align: center;">
        <FluentIcon Value="@(new Icons.Regular.Size48.Person())" Color="Color.Accent" />
        <FluentLabel Typo="Typography.H3" Color="Color.Accent">Welcome Back</FluentLabel>
        <FluentLabel Typo="Typography.Body" Color="Color.Neutral">Sign in to your account</FluentLabel>
    </FluentStack>
    
    <FluentCard Style="padding: 30px;">
        <!-- Formulario HTML nativo para realizar POST a /auth/login y emitir cookie de autenticación -->
        <form method="post" action="/auth/login">
            <FluentStack Orientation="Orientation.Vertical" VerticalGap="20">
                <FluentTextField @bind-Value="loginModel.Username" 
                               Label="Username" 
                               Placeholder="Enter your username"
                               Required="true"
                               Style="width: 100%;"
                               IconStart="@(new Icons.Regular.Size20.Person())" />
                
                <FluentTextField @bind-Value="loginModel.Password" 
                               Label="Password" 
                               Placeholder="Enter your password"
                               TextFieldType="TextFieldType.Password"
                               Required="true"
                               Style="width: 100%;"
                               IconStart="@(new Icons.Regular.Size20.Key())" />

                <!-- Inputs nativos ocultos con los nombres esperados por el endpoint -->
                <input type="hidden" name="username" value="@loginModel.Username" />
                <input type="hidden" name="password" value="@loginModel.Password" />
                
                <FluentButton Type="ButtonType.Submit" 
                            Appearance="Appearance.Accent" 
                            Style="width: 100%; margin-top: 10px;"
                            IconStart="@(new Icons.Regular.Size20.ArrowEnter())">
                    Sign In
                </FluentButton>
            </FluentStack>
        </form>
    </FluentCard>
    
    @if (!string.IsNullOrEmpty(message))
    {
        <FluentMessageBar Intent="@messageIntent" Style="margin-top: 20px;">
            <FluentIcon Value="@((Icon)(messageIntent == MessageIntent.Error ? new Icons.Regular.Size20.ErrorCircle() : new Icons.Regular.Size20.CheckmarkCircle()))" Slot="icon" />
            @message
        </FluentMessageBar>
    }
    
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5" Style="justify-content: center; margin-top: 20px;">
        <FluentLabel Typo="Typography.Body" Color="Color.Neutral">Don't have an account?</FluentLabel>
        <FluentAnchor Href="/register" Appearance="Appearance.Hypertext">Sign up here</FluentAnchor>
    </FluentStack>
</FluentStack>

@code {
    /// <summary>
    /// View model del formulario de autenticación
    /// </summary>
    private LoginModel loginModel = new();

    /// <summary>
    /// Mensaje de estado o error a mostrar al usuario
    /// </summary>
    private string? message;

    private MessageIntent messageIntent = MessageIntent.Info;

    protected override void OnParametersSet()
    {
        // Leer errores de querystring ?error=...
        var uri = new Uri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var error = query["error"];
        if (!string.IsNullOrEmpty(error))
        {
            messageIntent = MessageIntent.Error;
            message = error switch
            {
                "missing" => "Username and password are required.",
                "invalid" => "Invalid username or password.",
                _ => "An unexpected error occurred. Please try again."
            };
        }
    }

    /// <summary>
    /// Modelo de login para la vista
    /// </summary>
    public class LoginModel
    {
        [Required]
        public string Username { get; set; } = string.Empty;
        [Required]
        public string Password { get; set; } = string.Empty;
    }
}
